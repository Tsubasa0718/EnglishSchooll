{"version":3,"file":"bundle.f1d38b696041a248ad46.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,UAAU,OAAO;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ;AACjB,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;AC3ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNA;AAC8B;AAC9B;AACuB","sources":["webpack://englishschooll/./src/js/hamburger.js","webpack://englishschooll/./src/js/inview.js","webpack://englishschooll/./src/styles/style.scss?fd1f","webpack://englishschooll/webpack/bootstrap","webpack://englishschooll/webpack/runtime/compat get default export","webpack://englishschooll/webpack/runtime/define property getters","webpack://englishschooll/webpack/runtime/hasOwnProperty shorthand","webpack://englishschooll/webpack/runtime/make namespace object","webpack://englishschooll/./src/js/index.js"],"sourcesContent":["const Hamburger = document.getElementById(\"hamburger-menu\");\r\nconst Nav = document.querySelector('.nav');\r\n\r\nfunction getFocusableElements() {\r\n    return [\r\n        Hamburger,  // ハンバーガーメニューを含める\r\n        ...Nav.querySelectorAll(\".nav__link, .btn--nav\") // nav 内のフォーカス可能な要素\r\n    ];\r\n}\r\n\r\nHamburger.addEventListener('click', () => {\r\n    const Expanded = Hamburger.getAttribute('aria-expanded');\r\n\r\n    if (Expanded === 'false') {\r\n        Hamburger.setAttribute('aria-expanded', 'true');\r\n        Hamburger.classList.add('is-active');\r\n        Nav.setAttribute('aria-hidden', 'false');\r\n        Nav.classList.add('is-active');\r\n\r\n        const focusableElements = getFocusableElements();\r\n        focusableElements[1].focus(); // 最初の `nav__link` に即座にフォーカス\r\n\r\n        document.addEventListener(\"keydown\", (event) => trapFocus(event, focusableElements));\r\n    } else {\r\n        Hamburger.setAttribute('aria-expanded', 'false');\r\n        Hamburger.classList.remove('is-active');\r\n        Nav.setAttribute('aria-hidden', 'true');\r\n        Nav.classList.remove('is-active');\r\n\r\n        document.removeEventListener(\"keydown\", trapFocus);\r\n    }\r\n});\r\n\r\n// フォーカスを `nav` 内に閉じ込める関数\r\nfunction trapFocus(event, focusableElements) {\r\n    if (event.key === \"Tab\") {\r\n        const firstFocusableElement = focusableElements[0];\r\n        const lastFocusableElement = focusableElements[focusableElements.length - 1];\r\n\r\n        if (event.shiftKey) { // Shift + Tab の場合\r\n            if (document.activeElement === firstFocusableElement) {\r\n                event.preventDefault();\r\n                lastFocusableElement.focus();\r\n            }\r\n        } else { // 通常の Tab の場合\r\n            if (document.activeElement === lastFocusableElement) {\r\n                event.preventDefault();\r\n                firstFocusableElement.focus();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// `nav__link` がクリックされたときだけ `hamburger-menu` にフォーカスを戻す\r\ndocument.querySelectorAll(\".nav__link\").forEach(link => {\r\n    link.addEventListener(\"click\", () => {\r\n        setTimeout(() => {\r\n            Hamburger.focus();\r\n        }, 100); // ほんの少し遅延させることで自然な動作にする\r\n    });\r\n});\r\n\r\n// `hamburger-menu` にフォーカスがある状態で Shift + Enter を押したら、前の要素にフォーカス\r\nHamburger.addEventListener(\"keydown\", (event) => {\r\n    if (event.key === \"Enter\" && event.shiftKey) {\r\n        event.preventDefault();\r\n\r\n        // `hamburger-menu` の前のフォーカス可能な要素を取得\r\n        const focusableElements = document.querySelectorAll(\"a, button, input, textarea, select\");\r\n        const hamburgerIndex = Array.from(focusableElements).indexOf(Hamburger);\r\n\r\n        if (hamburgerIndex > 0) {\r\n            focusableElements[hamburgerIndex - 1].focus();\r\n        }\r\n    }\r\n});\r\n","const addClassOnIntersect = (selector, className) => {\r\n    const elements = document.querySelectorAll(selector);\r\n\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add(className);\r\n          observer.unobserve(entry.target); // 一度だけ実行\r\n        }\r\n      });\r\n    });\r\n\r\n    elements.forEach(el => observer.observe(el));\r\n  };\r\n\r\n  // BBBが選ばれる理由（スライド左）\r\n  addClassOnIntersect('.inview-slide-left', 'slide-left');\r\n\r\n  // BBBが選ばれる理由（スライド右）\r\n  addClassOnIntersect('.inview-slide-right', 'slide-right');\r\n\r\n  // 受講生の声（ふきだし）\r\n  addClassOnIntersect('.inview-balloon', 'balloon');\r\n","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// scssファイル\r\nimport \"../styles/style.scss\";\r\n// jsファイル\r\nimport \"./hamburger.js\"\r\nimport \"./inview.js\""],"names":[],"sourceRoot":""}